[user]
    name  = Gryphon Shafer
    email = gryphon@goldenguru.com

[core]
    editor       = vim
    autocrlf     = false
    commentchar  = auto
    whitespace   = fix,-indent-with-non-tab,trailing-space,cr-at-eol
    excludesFile = ~/.gitignore

[diff]
    # git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
    # instead of a/b/c/d as prefixes for patches
    mnemonicprefix      = true
    compactionHeuristic = true
    submodule           = log

[log]
    decorate = full

[stash]
    showpatch = true

[rebase]
    autostash = true

[branch]
    autosetupmerge = true

[merge]
    summary   = true
    verbosity = 1
    ff        = false

[apply]
    whitespace = nowarn

[sendemail]
    verify = off

[pull]
    rebase = true
    ff = only

[push]
    default = tracking

[fetch]
    prune = true

[color]
    ui     = true
    branch = auto
    diff   = auto
    status = auto

[color "branch"]
    current  = red bold
    local    = green bold
    remote   = blue bold
    upstream = blue bold

[color "diff"]
    meta       = yellow bold
    frag       = magenta bold
    old        = red bold
    new        = green bold
    whitespace = red reverse

[color "status"]
    added     = yellow
    changed   = green
    untracked = cyan

[alias]
    git = !exec git

    # repository stuff
    cl      = clone
    co      = checkout
    pl      = pull
    ph      = push
    rv      = remote -v
    remotes = remote -v

    # status
    s  = status --short
    sc = status --short --cached
    st = status

    # grep
    g = grep -n -i -a --untracked

    # log (default: current branch)
    l  = log --graph --date=local --pretty=format:'%C(yellow)%h %C(cyan)%ad %C(reset)%s %C(bold blue)%aN%C(auto)%d'
    lr = log --graph --date=local --pretty=format:'%C(yellow)%h %C(cyan)%ad %C(green)(%ar) %C(reset)%s %C(bold blue)%aN%C(auto)%d'
    ll = log --graph --date=local --name-status --decorate
    lb = log --graph --date=local --name-status --pretty=format:'%C(yellow)%h %C(cyan)%ad %C(green)(%ar) %C(bold blue)%aN%C(reset)%C(auto)%d%n%C(bold white)%s%n'
    lx = log --date=local --pretty=format:'%h|%aN|%ad|%ar|%s'

    # log (all branches)
    la  = log --all --graph --date=local --pretty=format:'%C(yellow)%h %C(cyan)%ad %C(reset)%s %C(bold blue)%aN%C(auto)%d'
    lra = log --all --graph --date=local --pretty=format:'%C(yellow)%h %C(cyan)%ad %C(green)(%ar) %C(reset)%s %C(bold blue)%aN%C(auto)%d'
    lla = log --all --graph --date=local --name-status --decorate
    lba = log --all --graph --date=local --name-status --pretty=format:'%C(yellow)%h %C(cyan)%ad %C(green)(%ar) %C(bold blue)%aN%C(reset)%C(auto)%d%n%C(bold white)%s%n'
    lxa = log --all --date=local --pretty=format:'%h|%aN|%ad|%ar|%s'

    # work log
    lw  = log --all --date=local --reverse --author='Gryphon Shafer' --pretty=format:'%C(yellow)%h%n%C(cyan)%ad %C(reset)%n%B'
    lwn = log --all --name-status --date=local --reverse --author='Gryphon Shafer' --pretty=format:'%C(yellow)%h%n%C(cyan)%ad %C(reset)%n%B'

    # show
    showf = show --pretty="format:" --name-only

    # diff
    d     = diff
    dc    = diff --cached
    dl    = diff HEAD^
    wdiff = diff --color-words
    df    = diff --name-only
    difff = diff --name-only

    # index add
    a  = add
    ap = add --patch

    # commit
    c     = commit -m
    ca    = commit -am
    ci    = commit  # interactively add commit message
    amend = commit --amend

    # reset
    unstage  = reset -q HEAD --
    discard  = checkout --
    uncommit = reset --mixed HEAD~
    nuke     = !git reset --hard HEAD && git clean -d -f

    # brach
    b   = branch
    bl  = branch -v -v -a
    cob = checkout -b
    sb  = show-branch

    # rebase
    r  = rebase
    rc = rebase --continue
    rs = rebase --skip

    # cherry-pick
    ch     = cherry -v
    cp     = cherry-pick -x
    cherry = cherry-pick -x

    # tag
    t    = tag -n
    tags = tag -n

    # stash
    ss       = stash         # stash changes
    sl       = stash list    # list stashes
    stashes  = stash list
    sa       = stash apply   # apply stash (restore changes)
    sp       = stash pop
    sd       = stash drop    # drop stashes (destory changes)
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"

[include]
    path = ~/.local_gitconfig
